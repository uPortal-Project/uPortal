description = "Apereo uPortal Utilities"

ext {
    generatedSourcesDir = file("${buildDir}/generated-sources/javac/main/java")
}

dependencies {
    compile project(':uPortal-concurrency')
    compile project(':uPortal-hibernate:uPortal-hibernate4-dialects')

    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.google.guava:guava:${guavaVersion}"
    compile "net.sf.ehcache:ehcache-core:${ehcacheVersion}"
    compile "org.apache.ant:ant:${antVersion}"
    compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
    compile "org.aspectj:aspectjrt:${aspectjVersion}"
    compile "com.fasterxml.woodstox:woodstox-core:${woodstoxVersion}"
    compile "org.jasig.resourceserver:resource-server-api:${resourceServerVersion}"
    compile "org.jasig.resourceserver:resource-server-utils:${resourceServerVersion}"
    compile("org.apereo.service.persondir:person-directory-impl:${personDirectoryVersion}") {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'org.springframework', module: 'spring-beans'
        exclude group: 'org.springframework', module: 'spring-context'
        exclude group: 'org.springframework', module: 'spring-core'
        exclude group: 'org.springframework', module: 'spring-tx'
    }
    compile "org.jgroups:jgroups:${jgroupsVersion}"
    compile "org.jvnet.jaxb2_commons:jaxb2-basics-runtime:${jaxb2basicsVersion}"
    compile "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    compile "org.springframework:spring-beans:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-webmvc-portlet:${springVersion}"
    compile "org.springframework.ldap:spring-ldap-core:${springLdapVersion}"
    compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
    compile "org.springframework.webflow:spring-binding:${springWebflowVersion}"
    compile "org.springframework.webflow:spring-webflow:${springWebflowVersion}"
    compile("org.springmodules:spring-modules-cache:${springModulesCacheVersion}") {
        exclude group: 'org.springframework', module: 'spring'
        exclude group: 'gigaspaces', module: 'gigaspaces-ce'
        exclude group: 'jini', module: 'jsk-lib'
        exclude group: 'jini', module: 'jsk-platform'
        exclude group: 'jini', module: 'mahalo'
        exclude group: 'jini', module: 'reggie'
        exclude group: 'jini', module: 'start'
        exclude group: 'jini', module: 'boot'
        exclude group: 'jini', module: 'webster'
        exclude group: 'commons-attributes', module: 'commons-attributes-api'
        exclude group: 'commons-attributes', module: 'commons-attributes-compiler'
        exclude group: 'jboss', module: 'javassist'
        exclude group: 'jboss', module: 'jboss-cache'
        exclude group: 'jboss', module: 'jboss-common'
        exclude group: 'jboss', module: 'jboss-jmx'
        exclude group: 'jboss', module: 'jboss-minimal'
        exclude group: 'jboss', module: 'jboss-system'
        exclude group: 'jcs', module: 'jcs'
        exclude group: 'jgroups', module: 'jgroups-all'
        exclude group: 'geronimo-spec', module: 'geronimo-spec-jta'
        exclude group: 'xpp3', module: 'xpp3_min'
        exclude group: 'xjavadoc', module: 'xjavadoc'
        exclude group: 'xstream', module: 'xstream'
        exclude group: 'opensymphony', module: 'oscache'
        exclude group: 'ehcache', module: 'ehcache'
    }
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation project(':uPortal-events')
    testImplementation "${portletApiDependency}"
    testImplementation "${servletApiDependency}"

    compileOnly "org.apache.portals.pluto:pluto-container-api:${plutoVersion}"
    annotationProcessor "org.hibernate:hibernate-jpamodelgen:${hibernateJpamodelgenVersion}"
    compileOnly "${portletApiDependency}"
    compileOnly "${servletApiDependency}"
}

/*
 * This section is the key to IDE integration.  IDE will look for source files in both...
 *
 *   - src/main/java
 *   - build/generated-sources/javac/main/java
 */
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir generatedSourcesDir
        }
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generatedSourcesDir)
}
